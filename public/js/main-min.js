"use strict";{async function callSymbolsApi(){try{const o=await fetch("https://api.exchangerate.host/symbols");if(!o.ok)throw new Error(`HTTPS error: ${o.status}`);return o.json()}catch(o){console.error(`Could not get products: ${o}`)}}async function callJson(){try{const o=await fetch("json/country-currency.json");if(!o.ok)throw new Error(`HTTPS error: ${o.status}`);return o.json()}catch(o){console.error(`Could not get products: ${o}`)}}function combineArray(o,c){console.log(o),console.log(c);pickCountryName(o,c);for(let c=0;c<o.length;c++){const n=o[c].code,t=o[c].description,r=new Object;r.currencyCode=n,r.currencyCodeName=t,r.countryName="",r.countryIcon=""}}function pickCountryName(o,c){for(let n=0;n<o.length;n++){const t=o[n].code;for(let r=0;r<c.length;r++){if(t===c[r].currency_code){c[r].country;console.log(`${n} ${o[n].code} ${o[n].description} ${r} ${c[r].currency_code} ${c[r].country}`)}}}}function pickCountryFlag(){}callSymbolsApi().then(o=>{for(const[c,n]of Object.entries(o))console.log(`${c}: ${n}`);return Object.values(o.symbols)}).then(o=>{callJson().then(c=>{combineArray(o,c)})})}